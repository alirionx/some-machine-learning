apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ollama
spec:
  selector:
    matchLabels:
      app: ollama
  serviceName: "ollama"
  replicas: 1
  template:
    metadata:
      labels:
        app: ollama
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: ollama
        image: ollama/ollama:latest
        ports:
        - containerPort: 11434
          name: api
        volumeMounts:
        - name: ollama-data
          mountPath: /root/.ollama
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "750m"
            memory: "2Gi"
        # lifecycle:
        #   postStart:
        #     exec:
        #       command: ["/bin/sh", "-c", "sleep 5 && ollama pull mistral && ollama pull avr/sfr-embedding-mistral"]
  volumeClaimTemplates:
  - metadata:
      name: ollama-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # storageClassName: "standard"
      resources:
        requests:
          storage: 50Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ollama
spec:
  selector:
    app: ollama
  ports:
    - protocol: TCP
      port: 11434
      targetPort: 11434
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qdrant
spec:
  selector:
    matchLabels:
      app: qdrant
  serviceName: "qdrant"
  replicas: 1
  template:
    metadata:
      labels:
        app: qdrant
    spec:
      containers:
      - name: qdrant
        image: qdrant/qdrant:latest
        ports:
        - containerPort: 6333
          name: http
        - containerPort: 6334
          name: grpc
        volumeMounts:
        - name: qdrant-data
          mountPath: /qdrant/storage
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
  volumeClaimTemplates:
  - metadata:
      name: qdrant-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi

---
apiVersion: v1
kind: Service
metadata:
  name: qdrant
spec:
  selector:
    app: qdrant
  ports:
    - protocol: TCP
      port: 6333
      targetPort: 6333
      name: http
    - protocol: TCP
      port: 6334
      targetPort: 6334
      name: grpc
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
spec:
  selector:
    matchLabels:
      app: minio
  serviceName: "minio"
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        args:
             - server
             - /data
             - --console-address
             - ":9001"       
        env:
        - name: MINIO_ROOT_USER
          value: "minio"
        - name: MINIO_ROOT_PASSWORD
          value: "minio123"
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        volumeMounts:
        - name: minio-data
          mountPath: /data
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
  volumeClaimTemplates:
  - metadata:
      name: minio-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  selector:
    app: minio
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
      name: api
    - protocol: TCP
      port: 9001
      targetPort: 9001
      name: console
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: "redis"
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "2Gi"
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: some-machine-learning
spec:
  replicas: 3
  selector:
    matchLabels:
      app: some-machine-learning
  template:
    metadata:
      labels:
        app: some-machine-learning
    spec:
      containers:
      - name: some-machine-learning
        image: harbor.app-scape.de/library/some-machine-learning:latest
        imagePullPolicy: Always
        env:
        - name: OLLAMA_BASE_URL
          value: http://ollama:11434
        - name: DB_HOST
          value: qdrant
        - name: CONTENT_BACKEND
          value: minio
        - name: CONTENT_MINIO_ENDPOINT
          value: minio:9000
        - name: CONTENT_MINIO_ACCESSKEY
          value: minio
        - name: CONTENT_MINIO_SECRETKEY
          value: minio123
        - name: MEMORY_BACKEND
          value: redis
        - name: MEMORY_REDIS_HOST
          value: redis
        - name: MEMORY_REDIS_PORT
          value: "6379"
        - name: LLMMODEL_CHAT
          # value: "mistral"
          value: "hf.co/alirionx/mistral-gguf-daniel"
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: some-machine-learning
spec:
  selector:
    app: some-machine-learning
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      name: http
  type: ClusterIP
